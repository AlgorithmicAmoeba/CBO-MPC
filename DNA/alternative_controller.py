import utils
import numpy
import DNA.PseudoDiagonaliser


# Shell Heavy Oil system
def G_numpy(s):
    return numpy.array([[4.05 * numpy.exp(-27*s) / (50*s + 1),
                         1.77 * numpy.exp(-28*s) / (60*s + 1),
                         5.88 * numpy.exp(-27*s) / (50*s + 1)],
                        [5.39 * numpy.exp(-18*s) / (50*s + 1),
                         5.72 * numpy.exp(-14*s) / (60*s + 1),
                         6.90 * numpy.exp(-15*s) / (40*s + 1)],
                        [4.38 * numpy.exp(-20*s) / (33*s + 1),
                         4.42 * numpy.exp(-22*s) / (44*s + 1),
                         7.20 * numpy.exp(-0*s) / (19*s + 1)]])


# num = [[[4.05], [1.77], [5.88]], [[5.39], [5.72], [6.90]], [[4.38], [4.42], [7.20]]]
# den = [[[50, 1], [60, 1], [50, 1]], [[50, 1], [60, 1], [40, 1]], [[33, 1], [44, 1], [19, 1]]]
# delay = [[27, 28, 27], [18, 14, 15], [20, 22, 0]]
# G = utils.InternalDelay.from_tf_coefficients(num, den, delay)

ws = numpy.logspace(-3, 3, 1000)
pd = DNA.PseudoDiagonaliser.PseudoDiagonaliser(G_numpy, 4, ws, show=True)
ans = pd.optimize(initial=[ 0.77582314,  0.28972315,  0.69327607,  0.21121965,  0.85218637,
        0.36978116,  0.70591287,  0.70680975,  0.15726697,  0.84895404,
        0.6347069 ,  0.9200216 ,  0.97883533,  0.11821951,  0.27239318,
        0.41460998,  0.43555365,  0.79269669,  0.05067167,  0.68264733,
        0.24600467,  0.19861715,  0.91797189,  0.23713603,  0.72405204,
        1.14494535,  0.55995608,  0.1515789 ,  0.08085369,  0.549191  ,
        0.41544553,  0.49067678,  0.6918575 ,  0.72223029,  0.65959165,
        0.87120159,  0.32476364,  0.756188  ,  0.11882492,  0.71869754,
        0.14295306,  0.93813737,  0.03629547,  0.59345602,  0.39534087,
        0.86513877,  0.15233181,  0.31490766,  0.26932749,  0.42900127,
        0.28023774,  0.33095211,  0.9575466 ,  0.26818844,  0.16048138,
        0.81152844,  0.80397136,  0.81334852,  0.93898401,  0.47367532,
        0.73865185, -0.02394141,  0.26203415,  0.36618771,  0.89991241,
        0.76728962,  0.09616385,  0.88706412,  0.38492204,  1.03152296,
        0.74562577,  0.36556233,  0.07580174,  0.57171859,  0.69003346,
        0.28205714,  0.59668615,  0.00648067,  0.06000033,  0.57255903,
        1.08781847,  0.74568054,  0.47887871,  0.02714285,  0.89544834,
        0.57982   ,  0.04957753,  0.12376464,  0.11250103,  0.48407762])

# 2.5303

# 3.57
# [ 0.44839431,  0.73352555,  0.93591131,  0.95688514,  0.14275427,
#         0.53156972,  0.53594387,  0.04510762,  0.92210094,  0.96080622,
#         0.81522103,  0.55534595,  0.23180812,  0.40634944,  0.81711202,
#         0.17394377,  0.54792127,  1.13048312,  0.82098485,  0.35383451,
#         0.58483404,  0.23794306,  0.60295631,  0.12558358,  0.09734182,
#         0.14968634,  0.04626039,  0.39433888,  0.38500814,  0.20975521,
#         0.94080554,  0.46839571,  0.85167088,  0.82637362, -0.0715903 ,
#         0.83989806,  0.44890014,  0.50745141,  0.48849572,  0.32278165,
#         0.26073248,  0.49609001,  0.06282839,  0.70649368, -0.05482324,
#         0.47511878,  0.97758854,  0.69870901,  0.23407019,  0.32157968,
#         0.74737744,  0.72875989,  0.21460835,  0.82951997,  0.4057462 ,
#         0.57628223,  0.51659044,  0.57840019,  0.87995947,  0.81631648,
#         1.17177355,  0.15718199,  0.58481115,  0.42946616,  0.79302926,
#         0.60567367,  0.19548814,  0.29602141,  0.92847932,  0.92146361,
#         0.90375542,  0.67290277,  0.71671658,  0.16607609, -0.09192962,
#         1.06929843,  0.47034708,  0.45166883,  0.96152502,  0.44140806,
#         0.17544295,  0.58272426,  0.16554191,  0.89844466,  0.98872213,
#         0.89314371,  0.19022953,  0.3381706 ,  0.1506022 ,  0.70817555]
